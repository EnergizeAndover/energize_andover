import argparse
import pandas as pd
import re


def parse(input_file):
    """Parse a file generated by the Metasys application

    Args:
        input_file: string, indicating path of Metasys file

    Returns:
        pandas DataFrame, with timestamps as index and measurement variables as columns
    """
    # Read the file into a pandas Series with MultiIndex
    df = pd.read_csv(input_file, index_col=[0, 1])['Object Value']

    # Remove units from values, so that they are numeric
    df = df.apply(drop_units)

    # Transform df from 1-dimensional Series with MultiIndex to 2-dimensional DataFrame
    df = df.unstack(level=-1)

    # Remove prefixes from column names
    df.columns = [drop_prefix(column_name) for column_name in df.columns]

    # Convert index to DatetimeIndex
    df.index = pd.to_datetime(df.index, dayfirst=True)

    return df


def drop_prefix(variable_name):
    """Remove the 'Town Of Andover:AHS-NAE1/FEC Bus2.' prefix from variable names"""
    pattern = re.compile(r"\ATown Of Andover:AHS-NAE1/FEC Bus2\.(.*)\Z")
    match = pattern.match(variable_name)
    if match is None:
        # variable_name was not of the expected format
        return np.nan
    else:
        return match.group(1)


def drop_units(value):
    """Remove the units from a string, e.g. '309.2 kWh' -> 309.2"""
    pattern = re.compile(r"\A(\d*\.?\d+) [a-zA-Z]+\Z")
    match = pattern.match(value)
    if match is None:
        # value was not of the expected format
        return np.nan
    else:
        return float(match.group(1))


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('input_file', help='name of input file')
    parser.add_argument('output_file', help='name of output file')
    args = parser.parse_args()
    transformed = parse(args.input_file)
    transformed.to_csv(args.output_file)
